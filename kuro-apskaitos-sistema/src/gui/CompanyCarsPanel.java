package gui;

import gui.lib.DBCellRenderer;
import gui.lib.DBPanel;
import gui.lib.DBTableModel;
import gui.lib.DateCellEditor;
import java.sql.Date;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;
import lib.Car;
import lib.Company;
import lib.DatabaseObject;

public class CompanyCarsPanel extends DBPanel {

    private final Company company;
    private final AbstractTableModel tableModel;
    private final JFrame parentFrame;
    private String[] columnNames = {"Registracijos numeris", "Markė", "Atsakingo asmens AK", "Draudimo pabaigos data", "Techninė apžiūra iki"};

    public CompanyCarsPanel() {
        this(false, null, null);
    }

    /**
     * Creates new form CompanyCarsPanel
     */
    public CompanyCarsPanel(boolean autoUpdate, JFrame parentFrame, final Company company) {
        this.company = company;
        this.parentFrame = parentFrame;

        this.tableModel = new DBTableModel(columnNames, objects) {

            @Override
            public Object getObjectValue(DatabaseObject object, int row, int col) {
                Car car = (Car) object;
                switch (col) {
                    case 0:
                        return car.getRegistrationNumber();
                    case 1:
                        return car.getBrand();
                    case 2:
                        return car.getAccountableEmployeeSSN();
                    case 3:
                        return car.getInsuranceExpirationDate();
                    case 4:
                        return car.getTechnicalCheckExpirationDate();
                    default:
                        return null;
                }
            }

            @Override
            public boolean setObjectValue(DatabaseObject object, Object value, int row, int col) {
                if (object != null && !object.equals(getObjectValue(object, row, col))) {
                    Car car = (Car) object;
                    switch (col) {
                        case 0:
                            car.setRegistrationNumber((String) value);
                            break;
                        case 1:
                            car.setBrand((String) value);
                            break;
                        case 2:
                            car.setAccountableEmployeeSSN((String) value);
                            break;
                        case 3:
                            car.setInsuranceExpirationDate((Date) value);
                            break;
                        case 4:
                            car.setTechnicalCheckExpirationDate((Date) value);
                            break;
                    }
                    return true;
                }
                return false;
            }

            @Override
            public boolean isObjectEditable(DatabaseObject object, int col) {
                if (object.isCreated()) {
                    return col > 0;
                }
                return true;
            }
        };

        initComponents();

        if (autoUpdate) {
            repopulateCarTable();
        }

        carTable.setDefaultRenderer(Object.class, new DBCellRenderer());
        carTable.setDefaultEditor(Date.class, new DateCellEditor());
    }

    private void repopulateCarTable() {
        List<Car> fetchedCars = Car.fetchListByCompanyCode(company.getCode());
        objects.clear();
        if (fetchedCars != null) {
            objects.addAll(fetchedCars);
        }

        tableModel.fireTableDataChanged();
    }


    @Override
    public void resetData() {
        repopulateCarTable();
    }

    @Override
    public void redrawData() {
        tableModel.fireTableDataChanged();
    }

    public java.sql.Date getCurrentDate() {
        return new java.sql.Date(new java.util.Date().getTime());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        carTable = new javax.swing.JTable();
        jAddButton = new javax.swing.JButton();
        jRemoveButton = new javax.swing.JButton();
        jSaveCompanyButton = new javax.swing.JButton();
        jLoadButton = new javax.swing.JButton();
        editCarFuelButton = new javax.swing.JButton();

        carTable.setModel(tableModel);
        carTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(carTable);

        jAddButton.setText("Pridėti");
        jAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAddButtonActionPerformed(evt);
            }
        });

        jRemoveButton.setText("Trinti");
        jRemoveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRemoveButtonActionPerformed(evt);
            }
        });

        jSaveCompanyButton.setText("Išsaugoti");
        jSaveCompanyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSaveCompanyButtonActionPerformed(evt);
            }
        });

        jLoadButton.setText("Pakrauti");
        jLoadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLoadButtonActionPerformed(evt);
            }
        });

        editCarFuelButton.setText("Mašinos kuras");
        editCarFuelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editCarFuelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jAddButton, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                    .addComponent(jRemoveButton, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                    .addComponent(jLoadButton, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                    .addComponent(jSaveCompanyButton, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                    .addComponent(editCarFuelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jAddButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRemoveButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(editCarFuelButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                        .addComponent(jSaveCompanyButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLoadButton)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAddButtonActionPerformed
        Car car = new Car("", company.getCode(), "", getCurrentDate(), getCurrentDate(), "");
        objects.add(car);

        int lastIndex = objects.size() - 1;
        tableModel.fireTableRowsInserted(lastIndex, lastIndex);
    }//GEN-LAST:event_jAddButtonActionPerformed

    private void jRemoveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRemoveButtonActionPerformed
        int[] selection = carTable.getSelectedRows();
        if (selection.length > 0) {
            int result = JOptionPane.showConfirmDialog(this, "Ar tikrai norite pašalinti pasirinktus įrašus?",
                "Šalinti darbuotojus", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);

            if (result == JOptionPane.YES_OPTION) {
                for (int i = selection.length - 1; i >= 0; i--) {
                    DatabaseObject object = objects.get(selection[i]);
                    if (object.destroy()) {
                        objects.remove(selection[i]);
                    }
                }

                if (selection.length > 0) {
                    tableModel.fireTableRowsDeleted(selection[0],
                        selection[selection.length - 1]);
                }
            }
        }
    }//GEN-LAST:event_jRemoveButtonActionPerformed

    private void jSaveCompanyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSaveCompanyButtonActionPerformed
        saveData();
        tableModel.fireTableDataChanged();
    }//GEN-LAST:event_jSaveCompanyButtonActionPerformed

    private void jLoadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jLoadButtonActionPerformed
        resetData();
    }//GEN-LAST:event_jLoadButtonActionPerformed

    private void editCarFuelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editCarFuelButtonActionPerformed
        int selection = carTable.getSelectedRow();
        if (selection != -1) {
            Car car = (Car) objects.get(selection);
            CarFuelDialog dialog = new CarFuelDialog(parentFrame, true, car);
            dialog.setVisible(true);
        }
    }//GEN-LAST:event_editCarFuelButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable carTable;
    private javax.swing.JButton editCarFuelButton;
    private javax.swing.JButton jAddButton;
    private javax.swing.JButton jLoadButton;
    private javax.swing.JButton jRemoveButton;
    private javax.swing.JButton jSaveCompanyButton;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
